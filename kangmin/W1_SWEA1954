import java.util.Scanner;

/*
*  https://swexpertacademy.com/main/solvingProblem/submitCodePopup.do?contestProbId=AV5PobmqAPoDFAUq&contestHistoryId=AZA14icakRkDFARJ&submitIndex=1
*  java8/ 25,032 kb /134 ms
*/
public class Main {

    public static void main(String args[]) throws Exception {

        Scanner sc = new Scanner(System.in);
        int T;
        T = sc.nextInt();

        int[] directionX = new int[] { 1, 0, -1, 0};
        int[] directionY = new int[] { 0, 1, 0, -1};
        StringBuilder sb = new StringBuilder();
        for (int test_case = 1; test_case <= T; test_case++) {
            int n = sc.nextInt();
            int nSquared = n*n;
            int num = 1;
            int directionIdx = 0;
            int x = 0;
            int y = 0;

            int [][] arr = new int[n][n];

            while (num <= nSquared) {
                arr[y][x] = num++;

                int nextX = x + directionX[directionIdx];
                int nextY = y + directionY[directionIdx];

                // 다음 인덱스가 범위를 벗어나거나, 이미 할당되어 있으면 방향 전환
                if (n <= nextX
                    || nextX < 0
                    || n <= nextY
                    ||nextY < 0
                    || arr[nextY][nextX] != 0) {
                    directionIdx = (directionIdx + 1) % 4;
                }

                x += directionX[directionIdx];
                y += directionY[directionIdx];
            }

            sb.append("#").append(test_case).append("\n");

            for (int i=0; i<n; i++) {
                for (int j=0; j<n; j++) {
                    sb.append(arr[i][j]).append(" ");
                }
                sb.append("\n");
            }
        }
        System.out.print(sb.toString());
    }
}
